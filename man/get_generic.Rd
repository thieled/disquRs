% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/callAPI.R
\name{get_generic}
\alias{get_generic}
\title{Generic function to retrieve data from the Disqus API in different formats.}
\usage{
get_generic(
  ressource,
  option,
  key,
  second_key = NULL,
  verbose = TRUE,
  n = 100,
  limit = 25,
  format = c("tidy", "raw"),
  ...
)
}
\arguments{
\item{ressource}{Character vector specifying the type of resource to access through the API.}

\item{option}{Character vector specifying the specific API operation to perform.}

\item{key}{Character vector containing the primary API key to authenticate the API call(s).}

\item{second_key}{Character vector containing a second API key to use if the hourly API limit is reached with the primary key (default is NULL).}

\item{verbose}{Logical value indicating whether to display informative messages during the API calls (default is TRUE).}

\item{n}{The maximum number of observations to retrieve (default is 100).}

\item{limit}{Numeric value specifying the maximum number of items to return in each API response (default is 25).}

\item{format}{Character vector specifying the desired output format: 'tidy' (unnested) or 'raw' (JSON) (default is 'tidy').}

\item{...}{Additional arguments to be passed to the \code{generateURL} function.}
}
\value{
The retrieved data from the Disqus API in the specified format.
}
\description{
This function is a wrapper around other functions in the package, providing a generic interface to interact with the Disqus API. It allows users to retrieve data from the API in either a 'tidy', unnested format or 'raw' (JSON) format. The function generates the appropriate URL for the API call using the provided resource, option, and additional arguments, and then makes paginated API calls to retrieve the data. Optionally, a second API key can be provided to handle the hourly API limit.
}
\examples{
# Retrieve data in 'tidy' format using the primary key
# tidy_data <- get_generic(ressource = "forums", option = "listThreads", key = "YOURAPPKEY")


}
\seealso{
\code{generateURL}, \code{paginateAPI}
}
